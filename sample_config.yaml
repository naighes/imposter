---
pattern_list:
- rule_expression: ${
      and(
        contains(request_url_path(), "rnd"),
        eq(request_http_method(), "GET")
      )
    }
  response:
    body: ${rnd_string(5)}
    headers:
      Content-Type: text/plain; charset=utf-8
    status_code: ${200}
- rule_expression: ${
      and(
        contains(request_url_path(), "hello"),
        eq(request_http_method(), "POST"),
        eq(request_http_header("Content-Type"), "application/json")
      )
    }
  response:
    body: Hello, complex rule!
    headers:
      Content-Type: text/plain; charset=utf-8
    status_code: ${200}
    cookies:
      test_cookie:
        value: test_value
        path: "/"
        domain: fak.eurl
        expires: Sat, 01 Jan 2028 12:00:00 GMT
- rule_expression: ${regex_match(request_url_path(), "^/myarray$")}
  response:
    body: "${[\"Hello\", \" world!\"]}"
    headers:
      Content-Type: text/plain; charset=utf-8
    status_code: ${200}
- rule_expression: ${
      and(
        regex_match(request_url_path(), "^/mypost$"),
        eq(request_http_method(), "POST")
      )
    }
  latency: 2000
  response:
    body: Hello, post!
    headers:
      Content-Type: text/plain; charset=utf-8
    status_code: ${200}
- rule_expression: ${regex_match(request_url_path(), "^/mylink$")}
  response: ${link(var("some_link"))}
- rule_expression: ${regex_match(request_url_path(), "^/myfile$")}
  response:
    body: ${file("./main.go")}
    headers:
      Content-Type: ${var("default_content_type")}
      Content-Language: ${
          if(contains(request_http_header("Accept-Language"), "en"))
            "en"
          else
            "it"
        }
      Cache-Control: ${request_http_header("Cache-Control")}
    status_code: ${200}
- rule_expression: ${regex_match(request_url_path(), "^/myredirect$")}
  response: ${redirect("http://localhost:8080/111", 301)}
- rule_expression: ${regex_match(request_url_path(), "^/[a-z]+$")}
  response:
    body: Hello, string!
    headers:
      Content-Type: text/plain; charset=utf-8
    status_code: ${200}
- rule_expression: ${regex_match(request_url_path(), "^/[0-9]+$")}
  response:
    body: Hello, number!
    headers:
      Content-Type: text/plain; charset=utf-8
      X-Test: some additional header
    status_code: ${404}
- rule_expression: ${true}
  response:
    body: Hello, default body!
    status_code: ${200}
vars:
  some_link: http://localhost:8080/aaa
  default_content_type: text/plain; charset=utf-8
